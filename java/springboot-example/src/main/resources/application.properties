# Spring Boot Application Configuration
spring.application.name=SecureMemory Spring Boot Example

# Server Configuration
server.port=8080

# Logging Configuration
logging.level.root=INFO
logging.level.com.securememory=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ============================================================================
# PROPRIÉTÉS SENSIBLES
# Ces propriétés seront chargées dans SecureMemory au lieu de String
# Elles sont chiffrées avec AES-256-GCM et protégées par des canaries
# ============================================================================

# Database Password - Stocké dans SecureMemory (bean: databasePassword)
# Au lieu d'être une String en clair dans la heap Java, ce mot de passe est:
# - Chiffré avec AES-256-GCM quand non utilisé
# - Déchiffré uniquement lors de l'accès
# - Automatiquement re-chiffré après utilisation
app.database.password=MySecretDatabasePassword123!

# API Key - Stocké dans SecureMemory (bean: apiKey)
# Utilisé pour les appels à des API externes
app.api.key=sk_live_1234567890abcdefghijklmnopqrstuvwxyz

# Encryption Secret - Stocké dans SecureMemory (bean: encryptionSecret)
# Utilisé pour le chiffrement de données applicatives
app.encryption.secret=ThisIsAVerySecretEncryptionKey2024!

# ============================================================================
# CONFIGURATION ADDITIONNELLE
# ============================================================================

# Application Info
app.name=Secure Memory Demo
app.version=1.0.0
app.description=Demonstration of SecureMemory usage in Spring Boot

# Security Headers (exemple)
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=true
